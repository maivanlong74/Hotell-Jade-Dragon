Tôi có 1 code js:
    var map;
        function initMap() {
            // Thiết lập bản đồ
            map = new ol.Map({
                target: 'map',
                layers: [
                    new ol.layer.Tile({
                        source: new ol.source.OSM(),
                    }),
                ],
            });
            // ------------------------------
            if ('geolocation' in navigator) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var pos = ol.proj.fromLonLat([position.coords.longitude, position.coords.latitude]);
                    var data = {
                        latitude: position.coords.latitude,
                        longitude: position.coords.longitude
                    };
                    var marker = new ol.Feature({
                        geometry: new ol.geom.Point(pos)
                    });
                    var markerSource = new ol.source.Vector({
                        features: [marker]
                    });
                    var markerLayer = new ol.layer.Vector({
                        source: markerSource
                    });
                    map.addLayer(markerLayer);
                    map.getView().setCenter(pos);
                    map.getView().setZoom(15);
                });
            } else {
                alert('Định vị địa lý không được trình duyệt của bạn hỗ trợ');
            }
            // Thêm control để xác định vị trí hiện tại
            var geolocation = new ol.Geolocation({
                trackingOptions: {
                    enableHighAccuracy: true
                },
                projection: map.getView().getProjection()
            });
            var positionFeature = new ol.Feature();
            positionFeature.setStyle(new ol.style.Style({
                image: new ol.style.Circle({
                    radius: 6,
                    fill: new ol.style.Fill({
                        color: '#3399CC'
                    }),
                    stroke: new ol.style.Stroke({
                        color: '#fff',
                        width: 2
                    })
                })
            }));
            // Tạo một đối tượng marker
            var marker = new ol.Feature({
                geometry: new ol.geom.Point(ol.proj.fromLonLat([0, 0]))
            });
            marker.setStyle(new ol.style.Style({
                image: new ol.style.Icon({
                    anchor: [0.5, 1],
                    src: 'https://openlayers.org/en/latest/examples/data/icon.png'
                })
            }));
            // Thêm marker vào bản đồ
            var markerLayer = new ol.layer.Vector({
                source: new ol.source.Vector({
                    features: [marker]
                })
            });
            map.addLayer(markerLayer);
            // Xử lý thông tin địa điểm khi click vào bản đồ
            map.on('singleclick', function (evt) {
                var lonlat = ol.proj.toLonLat(evt.coordinate);
                // Di chuyển marker tới vị trí click
                marker.getGeometry().setCoordinates(evt.coordinate);
                handlePosition(lonlat);
            });
            function handlePosition(lonlat) {
                var url = `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lonlat[1]}&lon=${lonlat[0]}&addressdetails=1&zoom=18`;
                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        var address = data.address;
                        var houseNumber = address.house_number || '';
                        var road = address.road || '';
                        var suburb = address.suburb || address.neighbourhood || '';
                        var city = address.city || address.town || address.village || '';
                        var state = address.state || '';
                        var displayName = `${houseNumber} ${road}, ${suburb}, ${city}, ${state}`;

                        var latitude = lonlat[1];
                        var longitude = lonlat[0];
                        // Hiển thị thông tin lên bản đồ
                        var result = document.getElementById("result");
                        if (result) {
                            result.innerHTML = `
                                <div><i>Địa chỉ:</i> </br> ${displayName}</div>
                                <input type="hidden" placeholder="" value="${displayName}" name="DiaChi" required>
                                <input type="hidden" value="${longitude}" name="KinhDo" readonly required>
                                <input type="hidden" value="${latitude}" name="ViDo" readonly required>
                                <input type="hidden" value="${road}" name="TenKhuVuc" readonly required>`;
                        } else {
                            console.log("Không tìm thấy phần tử có ID 'kết quả'");
                        }
                    })
                    .catch(error => {
                        console.error("Lỗi khi tìm nạp dữ liệu:", error);
                    });
            }
        }
Một Model khachsan:
    public long MaKhachSan { get; set; }
    public string TenKhachSan { get; set; }
    public Nullable<long> SoDienThoai { get; set; }
    public string Gmail { get; set; }
    public string DiaChi { get; set; }
    public string KinhDo { get; set; }
    public string ViDo { get; set; }
    public Nullable<long> Gia { get; set; }
    public string AnhKs { get; set; }
    public Nullable<long> MaKhuVuc { get; set; }
    public Nullable<bool> TrangThaiKs { get; set; }
    
Từ những thông tin trên, hãy giúp tôi làm một số việc sau:                                                                                                      
     - Hãy giúp tôi hoàn thành những công đoạn để hoàn thành chức năng đăng ký thông tin khách sạn trên map